{"version":3,"file":"static/js/251.20454623.chunk.js","mappings":"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","sources":["components/Item/Item.tsx","pages/MyProjects/MyProjects.tsx"],"sourcesContent":["import avatar from \"../../assets/Avatar.png\";\nimport { Avatar, Button, Card, Col, Divider, InputNumber, List, Modal, Popconfirm, Row } from 'antd';\nimport { ProjectTwoTone, UserOutlined } from '@ant-design/icons'\nimport { Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { useAddRateMutation, useAddUserMutation } from \"../../redux/api/projectsApi\";\nimport { toast } from \"react-toastify\";\nimport { useAppSelector } from \"../../redux/hooks\";\nimport { selectUser } from \"../../redux/features/userSlice\";\nconst { Meta } = Card;\n\nexport const Item = ({ item, refetch }) => {\n\tconst { user } = useAppSelector(selectUser);\n\tconst [addUser, { isError: isErrorUser, error: errorUser }] = useAddUserMutation();\n\tconst [addRate, { isError: isErrorRate, error: errorRate }] = useAddRateMutation();\n\tconst [rate, setRate] = useState< string | number | null>(100);\n\tconst [modalOpen, setModalOpen] = useState(false);\n\tconst onClick = (contentId: string) => {\n\t\taddUser({contentId})\n\t\t.then(()=>{\n\t\t\trefetch()\n\t\t})\n\t};\n\n\tconst onRateClick = (contestId: string) => {\n\t\taddRate({ contestId, rate })\n\t\t.then(()=>{\n\t\t\trefetch()\n\t\t})\n\t};\n\tuseEffect(() => {\n\t\tif (isErrorUser) {\n\t\t\ttoast.error((errorUser as any).data.message, {\n\t\t\t\tposition: 'top-right',\n\t\t\t  });\n\t\t\n\t\t}\n\n\t  }, [isErrorUser]);\n\t  useEffect(() => {\n\t\tif (isErrorRate) {\n\t\t\ttoast.error((errorRate as any).data.message, {\n\t\t\t\tposition: 'top-right',\n\t\t\t  });\n\t\t\n\t\t}\n\n\t  }, [isErrorRate]);\n\t  if (!user) {\n\t\treturn null;\n\t}\n\treturn <>\n\n\t\t<Card\n\t\t\tstyle={{ width: 240 }}\n\t\t\tcover={<ProjectTwoTone style={{ fontSize: '230px', color: '#08c' }} />}\n\t\t>\n\t\t\t<Meta title={item.name} />\n\t\t\tАвтор: {item.users[0].name}<br />\n\t\t\tКвота: {item.users.length}/{item.workers}<br />\n\t\t\t<Button style={{ width: \"100%\" }} type=\"primary\" onClick={() => setModalOpen(true)}>\n\t\t\t\tОткрыть\n\t\t\t</Button>\n\t\t</Card>\n\t\t<Modal\n\t\t\twidth={1024}\n\t\t\ttitle={item.name}\n\t\t\tcentered\n\t\t\topen={modalOpen}\n\t\t\tfooter={null}\n\t\t\tonCancel={() => setModalOpen(false)}\n\t\t>\n\t\t\t<Divider />\n\t\t\t<p>Автор проекта: {item.users[0].name}</p>\n\t\t\t<p>Квота людей: {item.users.length}/{item.workers}</p>\n\t\t\t<p>Средняя оценка экспертов: {item.rating.rating == 0 ? \"Нету\" : item.rating.rating}</p>\n\t\t\t<p>Описание проекта: <pre>{item.description}</pre></p>\n\t\t\t<p>Пользователи находящиеся в проекте:</p>\n\t\t\t<List\n        dataSource={item.users}\n        renderItem={(item: {id: number, name: string, email: string}, index) => (\n          <List.Item>\n\t\t\t<List.Item.Meta\n              avatar={\n                <Avatar shape=\"square\" icon={<UserOutlined />} />\n              }\n              title={item.name}\n              description={item.email}\n            />\n          </List.Item>\n        )}\n      />\n\t\t\t<Row gutter={16} justify={\"space-between\"}>\n\t\t\t\t<Col flex=\"auto\">\n\t\t\t\t{item.users.length >= item.workers ? <Button style={{ width: \"100%\" }} disabled type=\"primary\"  onClick={() => onClick(item.id)}>\n\t\t\t\t\tПрисоединится\n\t\t\t\t</Button> : <Button style={{ width: \"100%\" }} type=\"primary\"  onClick={() => onClick(item.id)}>\n\t\t\t\t\tПрисоединится\n\t\t\t\t</Button>}\n\t\t\t\t\t</Col>\n\t\t\t\t<Col flex=\"auto\">\n\t\t\t\t\t{user.role == 'EXPERT' || user.role == 'ADMIN' ? <Popconfirm\n\t\t\t\t\t\ttitle=\"Последний шаг\"\n\t\t\t\t\t\tplacement=\"bottom\"\n\t\t\t\t\t\tonConfirm={()=> onRateClick(item.id)}\n\t\t\t\t\t\tdescription={<>\n\t\t\t\t\t\t<p>Пожалуйста оцените проект!</p>\n\t\t\t\t\t\t\t<InputNumber\n\t\t\t\t\t\t\t\tvalue={rate}\n\t\t\t\t\t\t\t\tonChange={setRate}\n\t\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\t\tmax={100}\n\t\t\t\t\t\t\t\tformatter={(value) => `${value}`}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</> \n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Button style={{ width: \"100%\" }} type=\"primary\" >\n\t\t\t\t\t\t\tОценить проект\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Popconfirm> : null}\n\t\t\t\t</Col>\n\t\t\t\t<Col flex=\"auto\" >\n\t\t\t\t\t<Link target=\"_blank\" to={`http://45.12.73.150:5000/${item.fileName}`}><Button style={{ width: \"100%\" }} type=\"default\" onClick={() => setModalOpen(true)}>\n\t\t\t\t\tОткрыть карточку проекта\n\t\t\t\t</Button></Link>\n\t\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Modal>\n\t</>;\n};\n","import { Button, Col, FloatButton, Form, Input, InputNumber, Modal, Pagination, PaginationProps, Row, notification } from \"antd\";\nimport { Item } from \"../../components/Item\";\nimport { useCreateProjectMutation, useGetAllProjectsQuery, useGetAllUserProjectsQuery } from \"../../redux/api/projectsApi\";\nimport { PlusOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState } from \"react\";\nimport TextArea from \"antd/es/input/TextArea\";\nimport { NotificationPlacement } from \"antd/es/notification/interface\";\nimport { toast } from \"react-toastify\";\n\n\n\n\nconst MyProjects = () => {\n\n\tconst [modalOpen, setModalOpen] = useState(false);\n\tconst [current, setCurrent] = useState(1);\n\t\n\tconst [form] = Form.useForm();\n\tconst [api, contextHolder] = notification.useNotification();\n\tconst { data, isSuccess, refetch, isError, error  } = useGetAllUserProjectsQuery({ limit: '8', page: `${current}` })\n\tconst onChange = (page) => {\n\t\tsetCurrent(page);\n\t\trefetch()\n\t};\n\n\tReact.useEffect(()=>{\n\t\tif (isError) {\n\t\t toast.error((error as any).data.message)\n\t\t}\n\t},[isError])\n\treturn <div style={{ maxWidth: 1024}}>\n\t\t<Row justify=\"space-around\" style={{ width: \"100%\" }} gutter={[16, 16]}>\n\t\t\t{isSuccess ?\n\t\t\t\tdata.rows.map((item) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Col style={{ width: \"320px\" }} key={item.name}  xs={{span: 16}} sm={{span: 12}} md={{span: 8}} lg={{span: 6}} xl={{span: 6}} >\n\t\t\t\t\t\t\t<Item key={item.id} item={item} refetch={refetch} />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t);\n\t\t\t\t}) :\n\t\t\t\tnull\n\t\t\t}\n\t\t</Row>\n\t\t<Row justify=\"center\" style={{marginTop: \"8px\"}}>\n\t\t<Pagination defaultPageSize={8} pageSize={8} showSizeChanger={false} current={current} onChange={onChange} total={isSuccess ? data.count : 0} />\n\t\t</Row>\n\t\t\n\t</div>;\n};\nexport default MyProjects;"],"names":["Meta","Card","Item","_ref","item","refetch","user","useAppSelector","selectUser","_useAddUserMutation","useAddUserMutation","_useAddUserMutation2","_slicedToArray","addUser","_useAddUserMutation2$","isErrorUser","isError","errorUser","error","_useAddRateMutation","useAddRateMutation","_useAddRateMutation2","addRate","_useAddRateMutation2$","isErrorRate","errorRate","_useState","useState","_useState2","rate","setRate","_useState3","_useState4","modalOpen","setModalOpen","onClick","contentId","then","useEffect","toast","data","message","position","_jsxs","_Fragment","children","style","width","cover","_jsx","ProjectTwoTone","fontSize","color","title","name","users","length","workers","Button","type","Modal","centered","open","footer","onCancel","Divider","rating","description","List","dataSource","renderItem","index","avatar","Avatar","shape","icon","UserOutlined","email","Row","gutter","justify","Col","flex","disabled","id","role","Popconfirm","placement","onConfirm","contestId","InputNumber","value","onChange","min","max","formatter","concat","Link","target","to","fileName","current","setCurrent","_Form$useForm","Form","_notification$useNoti","notification","_notification$useNoti2","_useGetAllUserProject","useGetAllUserProjectsQuery","limit","page","isSuccess","React","maxWidth","rows","map","xs","span","sm","md","lg","xl","marginTop","Pagination","defaultPageSize","pageSize","showSizeChanger","total","count"],"sourceRoot":""}