{"version":3,"file":"static/js/778.25ff127b.chunk.js","mappings":"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","sources":["components/TaskItem/taskItem.tsx","pages/Tasks/Tasks.tsx"],"sourcesContent":["import avatar from \"../../assets/Avatar.png\";\nimport { Avatar, Button, Card, Col, Divider, InputNumber, Modal, Popconfirm, Row } from 'antd';\nimport { ProjectTwoTone } from '@ant-design/icons';\nimport React, { useState } from \"react\";\nimport { useAddUserMutation } from \"../../redux/api/taskApi\";\nimport Table, { ColumnsType } from \"antd/es/table\";\nimport { toast } from \"react-toastify\";\nimport { Link } from \"react-router-dom\";\nconst { Meta } = Card;\n\ninterface DataType {\n\tid: number;\n\tname: string;\n\tTaskUser: number;\n\trating: number;\n}\n\nconst columns: ColumnsType<DataType> = [\n\t{\n\t\ttitle: 'ФИО',\n\t\tdataIndex: 'name',\n\t\tkey: 'name',\n\t\trender: (text) => <a>{text}</a>,\n\t},\n\t{\n\t\ttitle: 'Прогноз',\n\t\tdataIndex: 'TaskUser',\n\t\tkey: 'predicted',\n\t\trender: (item) => Object.values(item)[0],\n\t},\n\t{\n\t\ttitle: 'Экспертная оценка',\n\t\tdataIndex: 'TaskUser',\n\t\tkey: 'rating',\n\t\trender: (item) => item.rate.rating === 0 ? <p>Нету</p> : item.rate.rating,\n\t},\n\n];\n\nexport const TaskItem = ({ item, refetch }) => {\n\tconst [addUser, { isError, error }] = useAddUserMutation();\n\tconst [modalOpen, setModalOpen] = useState(false);\n\tconst [predict, setPredict] = useState< string | number | null>(100);\n\tconst onClick = (contentId: string) => {\n\t\taddUser({ contentId, predict })\n\t\t.then(()=>{\n\t\t\trefetch()\n\t\t})\n\t\t.catch((error) => {\n\t\t\ttoast.error(error.data.message);\n\t\t});\n\t};\n\treturn <>\n\n\t\t<Card\n\t\t\tstyle={{ width: 240 }}\n\t\t\tcover={<ProjectTwoTone style={{ fontSize: '230px', color: '#08c' }} />}\n\t\t>\n\t\t\t<Meta title={item.name} />\n\t\t\t<p>Тип задачи: {item.typ === \"INVAR\" ? \"Инвариантный\": \"Вариативный\"}</p>\n\t\t\t<Button style={{ width: \"100%\" }} type=\"primary\" onClick={() => setModalOpen(true)}>\n\t\t\t\tОткрыть\n\t\t\t</Button>\n\t\t</Card>\n\t\t<Modal\n\t\t\twidth={1024}\n\t\t\ttitle={item.name}\n\t\t\tcentered\n\t\t\topen={modalOpen}\n\t\t\tfooter={null}\n\t\t\tonCancel={() => setModalOpen(false)}\n\t\t>\n\t\t\t<Divider />\n\t\t\t<p>Тип задачи: {item.typ === \"INVAR\" ? \"Инвариантный\": \"Вариативный\"}</p>\n\t\t\t<p>Время закрытия задачи: {item.stop}</p>\n\t\t\t<p>Описание задачи: <pre>{item.description }</pre></p>\n\t\t\t<p>Пользователи находящиеся в задаче:</p>\n\t\t\t<Table size='small' columns={columns} dataSource={item.users} rowKey=\"id\"/>\n\t\t\t<Row gutter={16} justify={\"space-between\"}>\n\t\t\t\t<Col flex=\"auto\">\n\t\t\t\t\t<Popconfirm\n\t\t\t\t\t\ttitle=\"Последний шаг\"\n\t\t\t\t\t\tplacement=\"bottom\"\n\t\t\t\t\t\tonConfirm={()=> onClick(item.id)}\n\t\t\t\t\t\tdescription={<>\n\t\t\t\t\t\t<p>Пожалуйста введите кол-во процентов которое вы выполните от данной задачи!</p>\n\t\t\t\t\t\t\t<InputNumber\n\t\t\t\t\t\t\t\tvalue={predict}\n\t\t\t\t\t\t\t\tonChange={setPredict}\n\t\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\t\tmax={100}\n\t\t\t\t\t\t\t\tformatter={(value) => `${value}%`}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</>\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Button style={{ width: \"100%\" }} type=\"primary\" >\n\t\t\t\t\t\t\tПрисоединится\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Popconfirm>\n\t\t\t\t</Col>\n\t\t\t\t<Col flex=\"auto\"></Col>\n\t\t\t\t<Col flex=\"auto\" ><Link target=\"_blank\" to={`http://45.12.73.150:5000/${item.fileName}`}><Button style={{ width: \"100%\" }} type=\"default\" onClick={() => setModalOpen(true)}>\n\t\t\t\t\tОткрыть карточку задачи\n\t\t\t\t</Button></Link></Col>\n\t\t\t</Row>\n\t\t</Modal>\n\t</>;\n};\n","import { Button, Col, DatePicker, FloatButton, Form, Input, InputNumber, Modal, Pagination, PaginationProps, Row, Select, Upload, UploadProps, message, notification } from \"antd\";\nimport { TaskItem } from \"../../components/TaskItem\";\nimport { useCreateTaskMutation, useGetAllTasksQuery } from \"../../redux/api/taskApi\";\nimport { PlusOutlined, UploadOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState } from \"react\";\nimport TextArea from \"antd/es/input/TextArea\";\nimport { NotificationPlacement } from \"antd/es/notification/interface\";\nimport { toast } from \"react-toastify\";\nimport { useAppSelector } from \"../../redux/hooks\";\nimport { selectUser } from \"../../redux/features/userSlice\";\n\n\n\n const Tasks = () => {\n\tconst { user } = useAppSelector(selectUser);\n\tconst [modalOpen, setModalOpen] = useState(false);\n\tconst [current, setCurrent] = useState(1);\n\tconst [form] = Form.useForm();\n\tconst [fileList, setFileList] = useState([]);\n\tconst [api, contextHolder] = notification.useNotification();\n\tconst { data,isSuccess, refetch } = useGetAllTasksQuery({ limit: '8', page: `${current}` })\n\tconst [createProject, {isSuccess: isCreateSuccess, isError, error }] = useCreateTaskMutation();\n\tconst onChange = (page) => {\n\t\tsetCurrent(page);\n\t\trefetch()\n\t};\n\tconst onFinishModal = (values: any) => {\n\n\t\tconst formData = new FormData();\n\t\tformData.append(\"f\", fileList[0]?.originFileObj);\n\t\tformData.append(\"name\", values.name);\n\t\tformData.append(\"description\", values.description);\n\t\tformData.append(\"typ\", values.typ);\n\t\tformData.append(\"stop\", values.stop);\n\t\t\n\t\tcreateProject(formData)\n\t\t  .then(() => {\n\t\t\tsetModalOpen(false);\n\t\t\trefetch();\n\t\t  })\n\t\t  .catch((error) => {\n\t\t\ttoast.error(error.data.message);\n\t\t  });\n\t};\n\n\tReact.useEffect(() => {\n\t\tif (isError) {\n\t\t\ttoast.error((error as any).data.message)\n\t\t}\n\t\tif (isCreateSuccess) {\n\t\t\trefetch()\n\t\t}\n\t}, [isError, isCreateSuccess])\n\n\tconst props: UploadProps = {\n\t\tbeforeUpload: (file) => {\n\t\t  const isAllowType = file.type === 'image/png' || file.type === 'image/jpeg' || file.type === 'application/msword' || file.type === 'text/plain' || file.type === 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' || file.type === 'application/pdf' ;\n\t\t  const isLt200M = file.size / 1024 / 1024 < 1;\n\t\t  if (!isAllowType) {\n\t\t\tmessage.error(`Этот загрузчик поддерживает только: .png, .jpeg, .doc, .docx, .pdf форматы! `);\n\t\t\treturn Upload.LIST_IGNORE;\n\t\t  }\n\t\t  if (!isLt200M) {\n\t\t\tmessage.error(`Размер файла не может превышать 200 мегабайт`);\n\t\t\treturn Upload.LIST_IGNORE;\n\t\t  }\n\t\t  return false;\n\t\t},\n\t  };\n\n\tconst normFile = (e) => {\n\t\tif (Array.isArray(e)) {\n\t\t\treturn e.slice(-1);\n\t\t}\n\t\treturn e && e.fileList.slice(-1);\n\t};\n\tif (!user) {\n\t\treturn null\n\t}\n\n\treturn <div style={{ maxWidth: 1024 }}>\n\t\t<Row justify=\"space-around\" style={{ width: \"100%\" }} gutter={[16, 16]}>\n\t\t\t{isSuccess ?\n\t\t\t\tdata.rows.map((item) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Col style={{ width: \"320px\" }} key={item.name} xs={{ span: 16 }} sm={{ span: 12 }} md={{ span: 8 }} lg={{ span: 6 }} xl={{ span: 6 }} >\n\t\t\t\t\t\t\t<TaskItem key={item.id} item={item} refetch={refetch} />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t);\n\t\t\t\t}) :\n\t\t\t\tnull}\n\n\t\t\t{user.role === \"ADMIN\" ? <FloatButton\n\t\t\t\ticon={<PlusOutlined />}\n\t\t\t\tshape=\"circle\"\n\t\t\t\ttooltip={<div>Создать задачу</div>}\n\t\t\t\tonClick={() => setModalOpen(true)}\n\t\t\t/> : null}\n\t\t\t<Modal\n\t\t\t\twidth={1024}\n\t\t\t\ttitle=\"Создание задачи\"\n\t\t\t\tcentered\n\t\t\t\topen={modalOpen}\n\t\t\t\tfooter={null}\n\t\t\t\tonCancel={() => setModalOpen(false)}\n\t\t\t>\n\n\t\t\t\t<Form\n\t\t\t\t\tform={form}\n\t\t\t\t\tlayout=\"vertical\"\n\t\t\t\t\tonFinish={onFinishModal}\n\t\t\t\t>\n\t\t\t\t\t<Form.Item label=\"Название задачи:\" name=\"name\" rules={[{ required: true, message: 'Пожалуйста заполните поле!' }]} >\n\t\t\t\t\t\t<Input />\n\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t<Form.Item label=\"Дата окончания задачи:\" name=\"stop\" rules={[{ required: true, message: 'Пожалуйста заполните поле!' }]} >\n\t\t\t\t\t\t<DatePicker />\n\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t<Form.Item label=\"Тип задачи:\" name=\"typ\" rules={[{ required: true, message: 'Пожалуйста заполните поле!' }]} >\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tdefaultValue=\"VAR\"\n\t\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\t{ value: 'INVAR', label: 'Инвариантная задача' },\n\t\t\t\t\t\t\t\t{ value: 'VAR', label: 'Вариативная задача' },\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t<Form.Item\n\t\t\t\t\t\tlabel=\"Описание задачи:\"\n\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\trules={[{ required: true, message: 'Пожалуйста заполните поле!' }]}\n\t\t\t\t\t>\n\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\tmaxLength={2000}\n\t\t\t\t\t\t\tshowCount\n\t\t\t\t\t\t\tautoSize={{ minRows: 4, maxRows: 8 }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Form.Item>\n\t\t\t\t\t<Form.Item name=\"file\"\n\t\t\t\t\t\tvaluePropName=\"file\"\n\t\t\t\t\t\tgetValueFromEvent={normFile}\n\t\t\t\t\t\tlabel=\"Карточка задачи\" rules={[{ required: true, message: 'Пожалуйста заполните поле!' }]} >\n\t\t\t\t\t\t<Upload {...props}  maxCount={1} fileList={fileList} onChange={({ fileList }) => setFileList(fileList)}>\n\t\t\t\t\t\t\t<Button icon={<UploadOutlined />}>Загрузить карточку задачи</Button>\n\t\t\t\t\t\t</Upload>\n\t\t\t\t\t</Form.Item>\n\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t<Button htmlType=\"submit\" type=\"primary\">Создать</Button>\n\t\t\t\t\t</Form.Item>\n\t\t\t\t</Form>\n\t\t\t</Modal>\n\t\t</Row>\n\t\t<Row justify=\"center\" style={{ marginTop: \"8px\" }}>\n\t\t\t<Pagination defaultPageSize={8} pageSize={8} showSizeChanger={false} current={current} onChange={onChange} total={isSuccess ? data.count : 0} />\n\t\t</Row>\n\n\t</div>;\n};\nexport default Tasks;"],"names":["Meta","Card","columns","title","dataIndex","key","render","text","_jsx","children","item","Object","values","rate","rating","TaskItem","_ref","refetch","_useAddUserMutation","useAddUserMutation","_useAddUserMutation2","_slicedToArray","addUser","_useAddUserMutation2$","_useState","isError","error","useState","_useState2","modalOpen","setModalOpen","_useState3","_useState4","predict","setPredict","_jsxs","_Fragment","style","width","cover","ProjectTwoTone","fontSize","color","name","typ","Button","type","onClick","Modal","centered","open","footer","onCancel","Divider","stop","description","Table","size","dataSource","users","rowKey","Row","gutter","justify","Col","flex","Popconfirm","placement","onConfirm","contentId","id","then","catch","toast","data","message","InputNumber","value","onChange","min","max","formatter","concat","Link","target","to","fileName","user","useAppSelector","selectUser","current","setCurrent","_Form$useForm","Form","form","_useState5","_useState6","fileList","setFileList","_notification$useNoti","notification","_notification$useNoti2","_useGetAllTasksQuery","useGetAllTasksQuery","limit","page","isSuccess","_useCreateTaskMutatio","useCreateTaskMutation","_useCreateTaskMutatio2","createProject","_useCreateTaskMutatio3","isCreateSuccess","React","props","beforeUpload","file","isAllowType","isLt200M","Upload","maxWidth","rows","map","xs","span","sm","md","lg","xl","role","FloatButton","icon","PlusOutlined","shape","tooltip","layout","onFinish","_fileList$","formData","FormData","append","originFileObj","label","rules","required","Input","DatePicker","Select","defaultValue","options","TextArea","maxLength","showCount","autoSize","minRows","maxRows","valuePropName","getValueFromEvent","e","Array","isArray","slice","_objectSpread","maxCount","UploadOutlined","htmlType","marginTop","Pagination","defaultPageSize","pageSize","showSizeChanger","total","count"],"sourceRoot":""}