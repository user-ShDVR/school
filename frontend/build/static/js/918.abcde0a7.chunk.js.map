{"version":3,"file":"static/js/918.abcde0a7.chunk.js","mappings":"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","sources":["pages/Register/Register.tsx","pages/Users/Users.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport { Button, Checkbox, Form, Input, Select, message } from 'antd';\nimport { EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useForm, Controller, SubmitHandler } from \"react-hook-form\";\nimport { object, string, TypeOf } from 'zod';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { useRegisterUserMutation } from '../../redux/api/authApi';\nimport { toast } from 'react-toastify';\n\n\nconst registerSchema = object({\n\tname: string().min(1, 'Full name is required').max(100),\n\temail: string()\n\t\t.min(1, 'Email address is required')\n\t\t.email('Email Address is invalid'),\n\trole: string().min(1, 'Role is required').max(100),\n\tpassword: string()\n\t\t.min(1, 'Password is required')\n\t\t.min(8, 'Password must be more than 8 characters')\n\t\t.max(32, 'Password must be less than 32 characters'),\n\tpasswordConfirm: string().min(1, 'Please confirm your password'),\n}).refine((data) => data.password === data.passwordConfirm, {\n\tpath: ['passwordConfirm'],\n\tmessage: 'Passwords do not match',\n});\n\nexport type RegisterInput = TypeOf<typeof registerSchema>;\n\nconst Register= (props: {modal: any}) => {\n\tconst [messageApi, contextHolder] = message.useMessage();\n\tconst [form] = Form.useForm();\n\tconst methods = useForm<RegisterInput>({\n\t\tresolver: zodResolver(registerSchema),\n\t});\n\n\tconst onSubmitHandler: SubmitHandler<RegisterInput> = (values) => {\n\t\tregisterUser(values);\n\t};\n\n\tconst [registerUser, { isLoading, isSuccess, error, isError }] = useRegisterUserMutation();\n\tconst {\n\t\treset,\n\t\thandleSubmit,\n\t\tcontrol,\n\t\tformState: { isSubmitSuccessful },\n\t} = methods;\n\n\tReact.useEffect(() => {\n\t\tif (isSuccess) {\n\t\t\ttoast.success('User registered successfully');\n\t\t\tprops.modal()\n\t\t}\n\n\t\tif (isError) {\n\t\t\tconsole.log(error);\n\t\t\tif (Array.isArray((error as any).data.error)) {\n\t\t\t\t(error as any).data.error.forEach((el: any) =>\n\t\t\t\t\ttoast.error(el.message, {\n\t\t\t\t\t\tposition: 'top-right',\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\ttoast.error((error as any).data.message, {\n\t\t\t\t\tposition: 'top-right',\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [isLoading]);\n\n\tReact.useEffect(() => {\n\t\tif (isSubmitSuccessful) {\n\t\t\treset();\n\t\t}\n\n\t}, [isSubmitSuccessful]);\n\n\treturn (\n\n\t\t<Form\n\t\t\tstyle={{ margin: \"auto 0px\" }}\n\t\t\tscrollToFirstError\n\t\t\tonFinish={handleSubmit(onSubmitHandler)}\n\t\t\tform={form}\n\t\t\tlayout=\"vertical\"\n\t\t>\n\t\t\t<Controller\n\t\t\t\tname=\"name\"\n\t\t\t\tcontrol={control}\n\t\t\t\trender={({\n\t\t\t\t\tfield: { onChange, onBlur, value, ref },\n\t\t\t\t\tfieldState: { error },\n\t\t\t\t}) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Form.Item name=\"name\" label=\"Имя\" rules={[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\tmessage: 'Пожалуйста введите ФИО!',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t]}>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t\t\t\tonBlur={onBlur}\n\t\t\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Введите свое ФИО\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t</>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<Controller\n\t\t\t\tname=\"email\"\n\t\t\t\tcontrol={control}\n\t\t\t\trender={({\n\t\t\t\t\tfield: { onChange, onBlur, value, ref },\n\t\t\t\t\tfieldState: { error },\n\t\t\t\t}) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Form.Item name=\"email\" label=\"Почта\" rules={[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: 'email',\n\t\t\t\t\t\t\t\t\tmessage: 'The input is not valid E-mail!',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\tmessage: 'Пожалуйста введите почту!',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t]}>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t\t\t\tonBlur={onBlur}\n\t\t\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Введите свою почту\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t</>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<Controller\n\t\t\t\tname=\"role\"\n\t\t\t\tcontrol={control}\n\t\t\t\trender={({\n\t\t\t\t\tfield: { onChange, onBlur, value, ref },\n\t\t\t\t\tfieldState: { error },\n\t\t\t\t}) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Form.Item label=\"Роль\">\n\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t\t\t\tonBlur={onBlur}\n\t\t\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\t\t\t{ value: 'USER', label: 'Педагог' },\n\t\t\t\t\t\t\t\t\t\t{ value: 'EXPERT', label: 'Эксперт' },\n\t\t\t\t\t\t\t\t\t\t{ value: 'ADMIN', label: 'Администратор' },\n\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t</>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<Controller\n\t\t\t\tname=\"password\"\n\t\t\t\tcontrol={control}\n\t\t\t\trender={({\n\t\t\t\t\tfield: { onChange, onBlur, value, ref },\n\t\t\t\t\tfieldState: { error },\n\t\t\t\t}) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\tlabel=\"Пароль\"\n\t\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\tmessage: 'Пожалуйста введите пароль!',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\thasFeedback\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Input.Password\n\t\t\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t\t\t\tonBlur={onBlur}\n\t\t\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Придумайте пароль\"\n\t\t\t\t\t\t\t\t\ticonRender={(visible) => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t</>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<Controller\n\t\t\t\tname=\"passwordConfirm\"\n\t\t\t\tcontrol={control}\n\t\t\t\trender={({\n\t\t\t\t\tfield: { onChange, onBlur, value, ref },\n\t\t\t\t\tfieldState: { error },\n\t\t\t\t}) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\tname=\"confirm\"\n\t\t\t\t\t\t\t\tlabel=\"Подтвердите пароль\"\n\t\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\tmessage: 'Пожалуйста подтвердите пароль!',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t({ getFieldValue }) => ({\n\t\t\t\t\t\t\t\t\t\tvalidator(_, value) {\n\t\t\t\t\t\t\t\t\t\t\tif (!value || getFieldValue('password') === value) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\treturn Promise.reject(new Error('Эти пароли не совпадают'));\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\thasFeedback\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Input.Password\n\t\t\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t\t\t\tonBlur={onBlur}\n\t\t\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Повторите пароль\"\n\t\t\t\t\t\t\t\t\ticonRender={(visible) => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t</>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<Form.Item>\n\t\t\t\t<Button htmlType='submit' style={{ maxWidth: \"300px\", minWidth: \"100%\" }} >Зарегистрироваться</Button>\n\t\t\t</Form.Item>\n\n\t\t</Form>\n\t)\n};\nexport default Register;","import React, { FC, useState } from 'react';\nimport { Button, FloatButton, Form, Input, Modal, Pagination, Select, Space, Table, TableColumnsType } from 'antd';\nimport { ColumnsType } from 'antd/es/table';\nimport { useDeleteUserMutation, useGetAllUsersQuery, useUpdateUserMutation } from '../../redux/api/userApi';\nimport { PlusOutlined, DeleteOutlined} from '@ant-design/icons';\nimport Register from '../Register/Register';\nimport { useDeleteAllTaskMutation } from '../../redux/api/taskApi';\n\nconst Users: FC = (props) => {\n\n\tinterface DataType {\n\t\tTasks: readonly DataType[];\n\t\tid: number;\n\t\tname: string;\n\t\temail: string;\n\t\trole: string;\n\t}\n\n\tconst columns: ColumnsType<DataType> = [\n\t\t{\n\t\t\ttitle: 'ФИО',\n\t\t\tdataIndex: 'name',\n\t\t\tkey: 'name',\n\t\t\trender: (text, record) => <Input defaultValue={text} onChange={(e) => handleInputChange(e.target.value, record.id, 'name')} />,\n\t\t},\n\t\t{\n\t\t\ttitle: 'Email',\n\t\t\tdataIndex: 'email',\n\t\t\tkey: 'email',\n\t\t\trender: (text, record) => <Input defaultValue={text} onChange={(e) => handleInputChange(e.target.value, record.id, 'email')} />,\n\t\t},\n\t\t{\n\t\t\ttitle: 'Роль',\n\t\t\tdataIndex: 'role',\n\t\t\tkey: 'role',\n\t\t\trender: (item, record) => <Select\n\t\t\t\tdefaultValue={`${item}`}\n\t\t\t\tonChange={(value) => handleSelectChange(value, record.id)}\n\t\t\t\tstyle={{ width: 120 }}\n\t\t\t\toptions={[\n\t\t\t\t\t{ value: 'USER', label: 'Юзер' },\n\t\t\t\t\t{ value: 'EXPERT', label: 'Эксперт' },\n\t\t\t\t\t{ value: 'ADMIN', label: 'Админ' },\n\t\t\t\t]}\n\t\t\t/>,\n\t\t},\n\t\t{\n\t\t\ttitle: 'Действия',\n\t\t\tkey: 'operation',\n\t\t\tfixed: 'right',\n\t\t\twidth: 100,\n\t\t\trender: (record) => <Space size=\"middle\">\n\t\t\t\t<Button type='dashed' onClick={() => handleApplyChanges(record.id)}>Применить изменения</Button>\n\t\t\t\t<Button type='default' onClick={() => handleDeleteChanges(record.id)}>Удалить</Button>\n\t\t\t</Space>,\n\t\t},\n\t];\n\n\tconst expandedColumns: TableColumnsType<any> = [\n\t\t{ title: 'Имя задачи', dataIndex: 'name', key: 'name' },\n\t\t{\n\t\t\ttitle: 'Прогноз',\n\t\t\tdataIndex: 'TaskUser',\n\t\t\tkey: 'predicted',\n\t\t\trender: (item) => Object.values(item)[0],\n\t\t},\n\t\t{\n\t\t\ttitle: 'Экспертная оценка',\n\t\t\tdataIndex: 'TaskUser',\n\t\t\tkey: 'rating',\n\t\t\trender: (item) => item.rate.rating === 0 ? <p>Нету</p> : item.rate.rating,\n\t\t},\n\t];\n\tconst [modalOpen, setModalOpen] = useState(false);\n\tconst [current, setCurrent] = useState(1);\n\tconst [editedData, setEditedData] = useState({});\n\tconst { data, isSuccess, refetch } = useGetAllUsersQuery({ limit: '8', page: `${current}` });\n\tconst [updateUser] = useUpdateUserMutation();\n\tconst [deleteUser] = useDeleteUserMutation();\n\tconst [deleteTask] = useDeleteAllTaskMutation();\n\t\n\tconst handleInputChange = (value, id, key) => {\n\t\tsetEditedData((prev) => ({\n\t\t\t...prev,\n\t\t\t[id]: {\n\t\t\t\t...prev[id],\n\t\t\t\t[key]: value,\n\t\t\t},\n\t\t}));\n\t};\n\n\tconst handleSelectChange = (value, id) => {\n\t\tsetEditedData((prev) => ({\n\t\t\t...prev,\n\t\t\t[id]: {\n\t\t\t\t...prev[id],\n\t\t\t\trole: value,\n\t\t\t},\n\t\t}));\n\t};\n\n\tconst handleApplyChanges = (id) => {\n\n\t\tconst { name, email, role } = editedData[id];\n\t\tupdateUser({ id, name, email, role })\n\t\t\t.then(() => {\n\t\t\t\tsetEditedData({});\n\t\t\t\trefetch();\n\t\t\t})\n\t};\n\n\tconst handleDeleteChanges = (id) => {\n\t\tdeleteUser({ id })\n\t\t\t.then(() => {\n\t\t\t\trefetch();\n\t\t\t})\n\t};\n\n\tconst onChange = (page) => {\n\t\tsetCurrent(page);\n\t\trefetch();\n\t};\n\tconst onFinishModal = () => {\n\t\tsetModalOpen(false);\n\t\trefetch();\n\t};\n\tReact.useEffect(() => {\n\t\tif (isSuccess) {\n\t\t\trefetch()\n\t\t}\n\t}, [isSuccess])\n\n\treturn (\n\t\t<div style={{ width: \"100%\", maxWidth: \"1024px\", height: \"86vh\", padding: \"32px 32px\", background: \"#FFFFFF\", borderRadius: \"32px\", boxShadow: \"28px 0px 50.4863px rgba(0, 0, 0, 0.17)\", justifyContent: \"center\", }}>\n\t\t\t{isSuccess ?\n\t\t\t\t<>\n\t\t\t\t\t<Table size='middle' scroll={{ y: 500, x: 'max-content' }} pagination={false} expandable={{ expandedRowRender: (record) => <Table columns={expandedColumns} dataSource={record.Tasks} pagination={false} />, defaultExpandedRowKeys: ['0'] }} columns={columns} dataSource={data.rows} rowKey=\"id\" />\n\t\t\t\t\t<Pagination defaultPageSize={8} pageSize={8} showSizeChanger={false} current={current} onChange={onChange} total={isSuccess ? data.count : 0} />\n\t\t\t\t</>\n\t\t\t\t:\n\t\t\t\tnull}\n\t\t\t<FloatButton.Group>\n\t\t\t<FloatButton\n\t\t\t\ticon={<PlusOutlined />}\n\t\t\t\tshape=\"circle\"\n\t\t\t\ttooltip={<div>Добавить пользователя</div>}\n\t\t\t\tonClick={() => setModalOpen(true)}\n\t\t\t/>\n\t\t\t<FloatButton\n\t\t\t\ticon={<DeleteOutlined />}\n\t\t\t\tshape=\"circle\"\n\t\t\t\ttooltip={<div>Удалить задачи</div>}\n\t\t\t\tonClick={deleteTask}\n\t\t\t/>\t\n\t\t\t</FloatButton.Group>\n\t\t\t\n\t\t\t<Modal\n\t\t\t\twidth={1024}\n\t\t\t\ttitle=\"Добавить пользователя\"\n\t\t\t\tcentered\n\t\t\t\topen={modalOpen}\n\t\t\t\tfooter={null}\n\t\t\t\tonCancel={() => setModalOpen(false)}\n\t\t\t>\n\t\t\t\t<Register modal={onFinishModal}/>\n\t\t\t</Modal>\n\t\t</div>\n\t)\n};\nexport default Users;\n"],"names":["registerSchema","object","name","string","min","max","email","role","password","passwordConfirm","refine","data","path","message","props","_message$useMessage","_message$useMessage2","_slicedToArray","_Form$useForm","Form","form","methods","useForm","resolver","zodResolver","_useRegisterUserMutat","useRegisterUserMutation","_useRegisterUserMutat2","registerUser","_useRegisterUserMutat3","isLoading","isSuccess","error","isError","reset","handleSubmit","control","isSubmitSuccessful","formState","React","toast","modal","console","log","Array","isArray","forEach","el","position","_jsxs","style","margin","scrollToFirstError","onFinish","values","layout","children","_jsx","Controller","render","_ref","_ref$field","field","onChange","onBlur","value","ref","fieldState","_Fragment","label","rules","required","Input","placeholder","_ref2","_ref2$field","type","_ref3","_ref3$field","Select","options","_ref4","_ref4$field","hasFeedback","iconRender","visible","EyeTwoTone","EyeInvisibleOutlined","_ref5","_ref5$field","_ref6","getFieldValue","validator","_","Promise","reject","Error","resolve","Button","htmlType","maxWidth","minWidth","columns","title","dataIndex","key","text","record","defaultValue","e","handleInputChange","target","id","item","concat","handleSelectChange","width","fixed","Space","size","onClick","handleApplyChanges","handleDeleteChanges","expandedColumns","Object","rate","rating","_useState","useState","_useState2","modalOpen","setModalOpen","_useState3","_useState4","current","setCurrent","_useState5","_useState6","editedData","setEditedData","_useGetAllUsersQuery","useGetAllUsersQuery","limit","page","refetch","_useUpdateUserMutatio","useUpdateUserMutation","updateUser","_useDeleteUserMutatio","useDeleteUserMutation","deleteUser","_useDeleteAllTaskMuta","useDeleteAllTaskMutation","deleteTask","prev","_objectSpread","_defineProperty","_editedData$id","then","height","padding","background","borderRadius","boxShadow","justifyContent","Table","scroll","y","x","pagination","expandable","expandedRowRender","dataSource","Tasks","defaultExpandedRowKeys","rows","rowKey","Pagination","defaultPageSize","pageSize","showSizeChanger","total","count","FloatButton","icon","PlusOutlined","shape","tooltip","DeleteOutlined","Modal","centered","open","footer","onCancel","Register"],"sourceRoot":""}